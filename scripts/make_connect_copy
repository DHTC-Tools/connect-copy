#!/usr/bin/python

#  File:     make_connect_copy
#
#  Author:   Suchandra Thapa
#  e-mail:   sthapa@ci.uchicago.edu
#
#
# Copyright (c) University of Chicago. 2014
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import optparse
import os
import sys

VERSION = '0.01-osgc'
CHIRP_SERVER = 'stash.osgconnect.net'
COPY_TEMPLATE_LOCATION = '/usr/share/connect-copy/connect_copy'

def create_chirp_ticket():
  """
  Create a chirp ticket with the appropriate permissions and return
  a string with ticket 
  """

  ticket = ""
  ticket_call = "chirp stash.osgconnect.net:%s ticket_create -output myticket.ticket " \
                "-bits 1024 -duration 86400 / rwl" % (os.getuid())
    
  retcode = os.system(ticket_call)
  if os.WEXITSTATUS(retcode) != 0:
    sys.stderr.write("Can't create ticket\n")
    return None
  ticket = open('myticket.ticket').read().replace('"', r'\"')  
  os.unlink('myticket.ticket')
  return ticket


def get_wrapper_template():
  """
  Check the parrot config and get the wrapper template based on that
  """
  wrapper_location = COPY_TEMPLATE_LOCATION
  return open(wrapper_location).read()

def create_connect_copy():
  """Generate connect copy"""
  try:
    template = get_wrapper_template()
    chirp_ticket = create_chirp_ticket()
    if chirp_ticket is None:
      sys.stderr.write("Error occurred when generating ticket, exiting...\n")
      return False
    template = template.replace('%%%TICKET%%%', 
                                chirp_ticket)

    template = template.replace('%%%PARROT_URL%%%',
                                'http://stash.osgconnect.net/parrot')

    open('connect_copy', 'w').write(template)
    os.chmod('connect_copy', 0700)
  except IOError, ex:
    sys.stderr.write("Got exception when writing wrapper:\n%s\n" % ex)
    return False
  return True

if __name__ == '__main__':
  parser = optparse.OptionParser(usage='Usage: %prog [options] arg1 arg2', 
                                 version='%prog ' + VERSION)

  (options, args) = parser.parse_args()

  if not create_connect_copy():
    sys.stderr.write("Can't write job wrapper\n")
    sys.exit(1)

